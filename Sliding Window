Maximum SubArray Problem Complete Solution
class Solution {
public:
    int maxSubArray(vector<int>& nums) {
        int maxSum = nums[0];
        int currentSum = 0;
        for(int i=0; i<nums.size(); i++){
            currentSum +=nums[i];
            maxSum = max(currentSum, maxSum);
            if(currentSum < 0){
                currentSum = 0;
            }
        }
        return maxSum;
    }
};
Best Time to By and Sell Problem Complete Solution
class Solution {
public:
    int maxProfit(vector<int>& prices) {
        int maxProfit = 0;
        int minPrice = INT_MAX;
        for(int i =0; i<prices.size(); i++){
            minPrice = min(minPrice, prices[i]);
            int profit = prices[i]-minPrice;
            maxProfit = max(maxProfit, profit);
        }
        return maxProfit;
    }
};
